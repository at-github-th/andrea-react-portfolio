import React, { useEffect, useRef, useState } from "react";
import MiniDonut from "./MiniDonut.jsx";
const DATA=[{title:"Client Management",charts:[{label:"Integrations",value:82},{label:"APIs/SDKs",value:78},{label:"PoCs",value:90},{label:"Demos",value:86},{label:"Docs",value:70},{label:"Security",value:73}]},{title:"Networking",charts:[{label:"TCP/IP",value:76},{label:"VPN",value:68},{label:"DNS",value:72},{label:"TLS",value:66}]},{title:"Web Competence",charts:[{label:"React",value:85},{label:"Node",value:80},{label:"SQL",value:74},{label:"CI/CD",value:69},{label:"Perf",value:62}]},{title:"Systems",charts:[{label:"macOS",value:90},{label:"Windows",value:80},{label:"Linux",value:80},{label:"iOS",value:60},{label:"Android",value:60}]}];
function useOnScreen(ref,margin="100px"){const[vis,setVis]=useState(false);useEffect(()=>{if(!ref.current||vis)return;const io=new IntersectionObserver(([e])=>{if(e.isIntersecting){setVis(true);io.disconnect();}},{threshold:0.12,rootMargin:margin});io.observe(ref.current);return()=>io.disconnect();},[ref,margin,vis]);return vis;}
export default function Areas(){const[open,setOpen]=useState(null);return(<div className="space-y-3">{DATA.map((sec,i)=>{const bodyRef=useRef(null);const Body=()=>{const vis=useOnScreen(bodyRef,"100px");return(<div ref={bodyRef} className={`accordion-body ${open===i?"open":""}`}>{open===i&&vis?<div className="mini-grid">{sec.charts.map((c,n)=>(<MiniDonut key={n} label={c.label} value={c.value}/>))}</div>:null}</div>)};return(<div key={i} className="accordion"><button className={`accordion-head ${open===i?"active":""}`} onClick={()=>setOpen(open===i?null:i)} aria-expanded={open===i}><span>{sec.title}</span><span className="sign" aria-hidden="true">{open===i?"âˆ’":"+"}</span></button><Body/></div>)})}</div>);}
